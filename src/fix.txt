Ok, you are getting there, but still not gotten what I want, 
1.) I dont want to create another carousel.jsx component, because I stoo want to use my RecentAppsModal.jsx component
2.) AppLayout.jsx is what controls the display of the RecentAppsModal.jsx from the code below
<List
                size={28}
                className={cursor-pointer ${visitedPages?.length === 0 ? "hover:cursor-text" : "hover:text-white"}}}
                onClick={() => setShowRecentApps(!showRecentApps)}
              />

3.) I want to achieve this similar scrolling carousel with the array from visitedPages, the visitedpages array is passed from the AppLayout.jsx props, do not change the data to something else,
4.) when the RecentAppsModal displays, I want the recently visited pages to be at the center where the pages are then displayed in a circular or stacked manner and the adjacent pages are positioned on the left and right with a perspective effect.

see my current code for visitedPages, how they are displayed, 
{(visitedPages || [])?.map((page, index) => (
            <motion.div
              key={page.id}
              className="absolute w-[380px] h-[280px] p-4 rounded-lg cursor-pointer flex flex-row items-center shadow-lg"
              style={{
                zIndex: visitedPages?.length - index, // Stacks newest on top
                transform: scale(${1 - index * 0.05}) translateY(${index * 8}px),
                opacity: index === 0 ? 1 : 0.7,
              }}
              initial={{ opacity: 0, y: 50 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5 }}
              whileHover={{ scale: 1.05 }}
              onClick={() => {
                setIsOpen(false);
                navigate(page.path);
              }}
            >
              <img src={page.thumbnail} alt={page.title} className="w-full object-cover rounded-md" />
              {/* <p className="text-white text-sm text-center mt-2">{page.title}</p> */}
            </motion.div>
          ))}

but I want you to display them using this logic
{React.Children.map(children, (child, i) => (
  <div className='card-container' style={{
      '--active': i === active ? 1 : 0,
      '--offset': (active - i) / 3,
      '--direction': Math.sign(active - i),
      '--abs-offset': Math.abs(active - i) / 3,
      'pointer-events': active === i ? 'auto' : 'none',
      'opacity': Math.abs(active - i) >= MAX_VISIBILITY ? '0' : '1',
      'display': Math.abs(active - i) > MAX_VISIBILITY ? 'none' : 'block',
    }}>
    {child}
  </div>
))}

 {[...new Array(CARDS)].map((_, i) => (
        <Card title={'Card ' + (i + 1)} content='Lorem ipsum...' />
      ))}

and the visitedPages array will display like this, see the css below

.card-container {
  position: absolute;
  width: 100%;
  height: 100%;
  transform: 
    rotateY(calc(var(--offset) * 50deg)) 
    scaleY(calc(1 + var(--abs-offset) * -0.4))
    translateZ(calc(var(--abs-offset) * -30rem))
    translateX(calc(var(--direction) * -5rem));
  filter: blur(calc(var(--abs-offset) * 1rem));
  transition: all 0.3s ease-out;
}